{
  "version": 3,
  "sources": ["../src/dom.ts", "../src/validator.ts"],
  "sourcesContent": [
    "interface ExtraOpts {\n  class?: string | string[];\n  data?: Record<string, string>;\n  style?: Partial<CSSStyleDeclaration>;\n}\n\ntype TagName = keyof HTMLElementTagNameMap;\ntype Tag = HTMLElementTagNameMap;\ntype Opts<K extends TagName> = Partial<Omit<Tag[K], \"style\"> & ExtraOpts>;\ntype Child = Node | string;\n\nfunction createElement<T extends TagName>(\n  tag: T,\n  opts: Opts<T> = {},\n  ...children: Child[]\n): Tag[T] {\n  const { class: classes, data, ...rest } = opts;\n  const partialOpts = rest as Partial<Tag[T]>;\n\n  const elem = document.createElement(tag);\n  for (const key in partialOpts) {\n    if (key in elem) {\n      const value = partialOpts[key];\n      if (value === undefined) {\n        continue;\n      }\n      elem[key] = value;\n    }\n  }\n  if (classes) {\n    if (typeof classes === \"string\") {\n      elem.classList.add(classes);\n    } else {\n      elem.classList.add(...classes);\n    }\n  }\n  for (const [key, value] of Object.entries(data || {})) {\n    elem.setAttribute(`data-${key}`, value);\n  }\n  for (const [key, value] of Object.entries(opts.style || {})) {\n    elem.style[key as any] = value;\n  }\n  for (const child of children) {\n    elem.appendChild(\n      typeof child === \"string\" ? document.createTextNode(child) : child\n    );\n  }\n  return elem;\n}\n\nfunction element<T extends TagName>(\n  tag: T\n): {\n  (cls: `.${string}`, ...children: Child[]): Tag[T];\n} & {\n  (opts: Opts<T>, ...children: Child[]): Tag[T];\n} & {\n  (...children: Child[]): Tag[T];\n} {\n  return (...args: any[]) => {\n    let opts: Opts<T> | undefined;\n    let children: Child[];\n\n    if (args.length > 0 && typeof args[0] === \"string\") {\n      const first: string = args[0];\n      if (first.startsWith(\".\")) {\n        opts = { class: args[0].substring(1).split(\".\") } as Opts<T>;\n        children = args.slice(1) as Child[];\n      } else {\n        opts = undefined;\n        children = args as Child[];\n      }\n    } else if (args.length > 0 && !(args[0] instanceof Node)) {\n      opts = args[0] as Opts<T>;\n      children = args.slice(1) as Child[];\n    } else {\n      children = args;\n    }\n\n    return createElement(tag, opts, ...children);\n  };\n}\n\nexport const form = element(\"form\");\nexport const input = element(\"input\");\nexport const button = element(\"button\");\nexport const div = element(\"div\");\nexport const span = element(\"span\");\nexport const table = element(\"table\");\nexport const tbody = element(\"tbody\");\nexport const thead = element(\"thead\");\nexport const th = element(\"th\");\nexport const tr = element(\"tr\");\nexport const td = element(\"td\");\nexport const select = element(\"select\");\nexport const option = element(\"option\");\nexport const pre = element(\"pre\");\nexport const code = element(\"code\");\n",
    "// Email validator TypeScript\nimport { div } from \"./dom.js\";\n\ninterface EmailParseResult {\n  name?: string;\n  address?: string;\n  local?: string;\n  domain?: string;\n  type?: string;\n  format?: string;\n  [key: string]: any;\n}\n\n// Theme management\nfunction getTheme(): string {\n  const savedTheme = localStorage.getItem(\"theme\");\n  if (savedTheme) {\n    return savedTheme;\n  }\n\n  if (\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: light)\").matches\n  ) {\n    return \"light\";\n  }\n\n  return \"dark\";\n}\n\nfunction setTheme(theme: string): void {\n  document.documentElement.setAttribute(\"data-theme\", theme);\n  localStorage.setItem(\"theme\", theme);\n}\n\nfunction toggleTheme(): void {\n  const currentTheme = getTheme();\n  const newTheme = currentTheme === \"dark\" ? \"light\" : \"dark\";\n  setTheme(newTheme);\n}\n\n// Make toggle function globally available\n(window as any).toggleTheme = toggleTheme;\n\n// JSON syntax highlighting\nfunction syntaxHighlightJSON(obj: any): string {\n  const json = JSON.stringify(obj, null, 2);\n  return json.replace(\n    /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n    (match) => {\n      let cls = \"json-number\";\n      if (/^\"/.test(match)) {\n        if (/:$/.test(match)) {\n          cls = \"json-key\";\n        } else {\n          cls = \"json-string\";\n        }\n      } else if (/true|false/.test(match)) {\n        cls = \"json-boolean\";\n      } else if (/null/.test(match)) {\n        cls = \"json-null\";\n      }\n      return `<span class=\"${cls}\">${match}</span>`;\n    }\n  );\n}\n\nfunction parseEmail(): void {\n  const emailInputEl = document.getElementById(\n    \"emailInput\"\n  ) as HTMLInputElement;\n  const rfc6532El = document.getElementById(\"rfc6532\") as HTMLInputElement;\n  const strictEl = document.getElementById(\"strict\") as HTMLInputElement;\n  const rejectTLDEl = document.getElementById(\"rejectTLD\") as HTMLInputElement;\n\n  if (!emailInputEl) return;\n\n  const emailInput = emailInputEl.value;\n  const rfc6532 = rfc6532El?.checked || false;\n  const strict = strictEl?.checked || false;\n  const rejectTLD = rejectTLDEl?.checked || false;\n\n  const options = {\n    input: emailInput,\n    rfc6532,\n    strict,\n    rejectTLD,\n  };\n\n  try {\n    // Parse the email address using the email-addresses library\n    const result = (window as any).emailAddresses?.parseOneAddress(options);\n\n    const resultsSection = document.getElementById(\"resultsSection\");\n    const statusIndicator = document.getElementById(\"statusIndicator\");\n    const parsedData = document.getElementById(\"parsedData\");\n    const astVisualization = document.getElementById(\"astVisualization\");\n\n    if (resultsSection) resultsSection.classList.remove(\"hidden\");\n\n    if (result) {\n      // Success case\n      if (statusIndicator)\n        statusIndicator.className = \"status-indicator status-valid\";\n      if (parsedData) parsedData.innerHTML = syntaxHighlightJSON(result);\n\n      // Create AST visualization\n      if (astVisualization) {\n        astVisualization.innerHTML = \"\";\n        createASTVisualization(result, astVisualization);\n      }\n    } else {\n      // Failed to parse\n      if (statusIndicator)\n        statusIndicator.className = \"status-indicator status-invalid\";\n      if (parsedData) {\n        parsedData.innerHTML =\n          '<div class=\"error-message\">Failed to parse email address</div>';\n      }\n\n      if (astVisualization) {\n        astVisualization.innerHTML =\n          '<div class=\"ast-node error\"><div class=\"node-label\">Parsing Error</div><div class=\"node-value\">The email address could not be parsed according to RFC 5322 specifications</div></div>';\n      }\n    }\n  } catch (error: any) {\n    // Exception occurred\n    const resultsSection = document.getElementById(\"resultsSection\");\n    const statusIndicator = document.getElementById(\"statusIndicator\");\n    const parsedData = document.getElementById(\"parsedData\");\n    const astVisualization = document.getElementById(\"astVisualization\");\n\n    if (resultsSection) resultsSection.classList.remove(\"hidden\");\n    if (statusIndicator)\n      statusIndicator.className = \"status-indicator status-invalid\";\n    if (parsedData) {\n      parsedData.innerHTML = `<div class=\"error-message\">Error: ${error.message}</div>`;\n    }\n    if (astVisualization) {\n      astVisualization.innerHTML = `<div class=\"ast-node error\"><div class=\"node-label\">Exception</div><div class=\"node-value\">${error.message}</div></div>`;\n    }\n  }\n}\n\nfunction createASTVisualization(\n  data: EmailParseResult,\n  container: HTMLElement\n): void {\n  // Main email address node\n  const emailNode = div(\n    { className: \"ast-node email-address\" },\n    div({ className: \"node-label\" }, \"Email Address\"),\n    div({ className: \"node-value\" }, data.address || \"N/A\")\n  );\n\n  const childrenContainer = div({ className: \"node-children\" });\n\n  // Display name (if present)\n  if (data.name) {\n    const nameNode = div(\n      { className: \"ast-node display-name\" },\n      div({ className: \"node-label\" }, \"Display Name\"),\n      div({ className: \"node-value\" }, `\"${data.name}\"`)\n    );\n    childrenContainer.appendChild(nameNode);\n  }\n\n  // Local part\n  if (data.local) {\n    const localNode = div(\n      { className: \"ast-node local-part\" },\n      div({ className: \"node-label\" }, \"Local Part\"),\n      div({ className: \"node-value\" }, data.local)\n    );\n    childrenContainer.appendChild(localNode);\n  }\n\n  // Domain\n  if (data.domain) {\n    const domainNode = div(\n      { className: \"ast-node domain\" },\n      div({ className: \"node-label\" }, \"Domain\"),\n      div({ className: \"node-value\" }, data.domain)\n    );\n    childrenContainer.appendChild(domainNode);\n  }\n\n  // Additional properties\n  const additionalProps = [\"type\", \"format\"];\n  additionalProps.forEach((prop) => {\n    if (data[prop]) {\n      const propNode = div(\n        { className: \"ast-node\" },\n        div(\n          { className: \"node-label\" },\n          prop.charAt(0).toUpperCase() + prop.slice(1)\n        ),\n        div({ className: \"node-value\" }, data[prop])\n      );\n      childrenContainer.appendChild(propNode);\n    }\n  });\n\n  emailNode.appendChild(childrenContainer);\n  container.appendChild(emailNode);\n}\n\nfunction loadExample(email: string): void {\n  // Decode HTML entities for the input\n  const decodedEmail = email\n    .replace(/&quot;/g, '\"')\n    .replace(/&lt;/g, \"<\")\n    .replace(/&gt;/g, \">\");\n  const emailInputEl = document.getElementById(\n    \"emailInput\"\n  ) as HTMLInputElement;\n  if (emailInputEl) {\n    emailInputEl.value = decodedEmail;\n    parseEmail();\n  }\n}\n\n// Global functions for validator\n(window as any).parseEmail = parseEmail;\n(window as any).loadExample = loadExample;\n\n// Initialize theme and set up event listeners for validator\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  setTheme(getTheme());\n\n  if (window.matchMedia) {\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: light)\");\n    mediaQuery.addEventListener(\"change\", (e) => {\n      if (!localStorage.getItem(\"theme\")) {\n        setTheme(e.matches ? \"light\" : \"dark\");\n      }\n    });\n  }\n\n  // Initialize validator functionality\n  const emailInput = document.getElementById(\"emailInput\") as HTMLInputElement;\n  if (emailInput) {\n    // Parse the default example on load\n    parseEmail();\n\n    // Set up real-time parsing\n    emailInput.addEventListener(\"input\", parseEmail);\n\n    // Auto-parse when options change\n    document.getElementById(\"rfc6532\")?.addEventListener(\"change\", parseEmail);\n    document.getElementById(\"strict\")?.addEventListener(\"change\", parseEmail);\n    document\n      .getElementById(\"rejectTLD\")\n      ?.addEventListener(\"change\", parseEmail);\n  }\n});\n"
  ],
  "mappings": "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",
  "debugId": "F9C0E6D79FA6A4E364756E2164756E21",
  "names": []
}